 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/src/components/anagrafiche/OrdiniClienteManager.jsx b/src/components/anagrafiche/OrdiniClienteManager.jsx
index 8a7214eebb494fa3ab54eeefd0a4fa0ed97d43cb..4c59d853e77aace02067ae7e3e6b17ed8c03955e 100644
--- a/src/components/anagrafiche/OrdiniClienteManager.jsx
+++ b/src/components/anagrafiche/OrdiniClienteManager.jsx
@@ -420,38 +420,48 @@ function OrdiniClienteManager({ session, clienti, commesse }) {
                     <div> <label htmlFor="formCommessaOrdine">Commessa Oilsafe Associata (Opzionale):</label> <select id="formCommessaOrdine" value={formSelectedCommessaIdOrdine} onChange={e => setFormSelectedCommessaIdOrdine(e.target.value)} disabled={!formSelectedClienteIdOrdine}> <option value="">Nessuna Commessa</option> {commesseFiltratePerClienteForm.map(c => <option key={c.id} value={c.id}>{c.codice_commessa} - {c.descrizione_commessa}</option>)} </select> </div>
                     <button type="submit" disabled={loadingActions}>{loadingActions ? 'Salvataggio...' : (editingOrdine ? 'Salva Modifiche' : 'Aggiungi Ordine')}</button>
                     {editingOrdine && ( <button type="button" className="secondary" onClick={resetForm} disabled={loadingActions} style={{marginLeft:'10px'}}> Annulla Modifica </button> )}
                 </form>
             )}
             <h3>Elenco Ordini Cliente ({pageLoading ? '...' : totalOrdini} totali)</h3>
             {pageLoading && ordini.length === 0 ? <p>Caricamento ordini...</p> : null}
             {!pageLoading && ordini.length === 0 ? (<p>Nessun ordine cliente trovato con i filtri applicati.</p>) : (
                 <>
                 <table>
                     <thead><tr><th>Numero Ordine</th><th>Data</th><th>Cliente</th><th>Commessa</th><th>Descrizione</th>{canManage && <th>Azioni</th>}</tr></thead>
                     <tbody>
                         {ordini.map(o => (
                             <tr key={o.id} style={editingOrdine && editingOrdine.id === o.id ? {backgroundColor: '#e6f7ff'} : {}}>
                                 <td>{o.numero_ordine_cliente}</td><td>{o.data_ordine ? new Date(o.data_ordine).toLocaleDateString() : '-'}</td><td>{o.clienti?.nome_azienda || 'N/D'}</td><td>{o.commesse?.codice_commessa || '-'}</td><td>{o.descrizione_ordine || '-'}</td>
                                 {canManage && (<td className="actions">
                                         <button className="button secondary small" onClick={() => handleEditOrdine(o)} disabled={loadingActions}>Mod.</button>
                                         <button className="button danger small" onClick={() => handleDeleteOrdine(o.id)} disabled={loadingActions} style={{marginLeft:'5px'}}>Elim.</button>
                                     </td>)}
                             </tr>
                         ))}
                     </tbody>
                 </table>
                 {totalPages > 1 && (
                     <div className="pagination-controls" style={{ marginTop: '20px', textAlign: 'center' }}>
-                        <button onClick={() => goToPage(1)} disabled={currentPage === 1 || loadingActions || pageLoading} className="button small">« Inizio</button>
-                        <button onClick={() => goToPage(currentPage - 1)} disabled={currentPage === 1 || loadingActions || pageLoading} className="button small">‹ Prec.</button>
+                        <button
+                            onClick={() => goToPage(currentPage - 1)}
+                            disabled={currentPage === 1 || loadingActions || pageLoading}
+                            className="button small"
+                        >
+                            ‹ Indietro
+                        </button>
                         <span style={{ margin: '0 10px' }}> Pagina {currentPage} di {totalPages} </span>
-                        <button onClick={() => goToPage(currentPage + 1)} disabled={currentPage === totalPages || loadingActions || pageLoading} className="button small">Succ. ›</button>
-                        <button onClick={() => goToPage(totalPages)} disabled={currentPage === totalPages || loadingActions || pageLoading} className="button small">Fine »</button>
+                        <button
+                            onClick={() => goToPage(currentPage + 1)}
+                            disabled={currentPage === totalPages || loadingActions || pageLoading}
+                            className="button small"
+                        >
+                            Avanti ›
+                        </button>
                     </div>
                 )}
                 </>
             )}
         </div>
     );
 }
 export default OrdiniClienteManager;
 
EOF
)